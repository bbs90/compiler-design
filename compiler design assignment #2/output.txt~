TOKEN	 	TYPE
program	 	KEYWORD
bin	 	IDENTIFIER
(	 	GENERAL PUNCTUATION
input	 	IDENTIFIER
,	 	GENERAL PUNCTUATION
output	 	IDENTIFIER
)	 	GENERAL PUNCTUATION
;	 	GENERAL PUNCTUATION
type	 	KEYWORD
data	 	IDENTIFIER
=	 	GENERAL PUNCTUATION
array	 	KEYWORD
[	 	GENERAL PUNCTUATION
1	 	CONSTANT
.	 	GENERAL PUNCTUATION
.	 	GENERAL PUNCTUATION
100	 	CONSTANT
]	 	GENERAL PUNCTUATION
of	 	KEYWORD
integer	 	IDENTIFIER
;	 	GENERAL PUNCTUATION
var	 	KEYWORD
a	 	IDENTIFIER
:	 	GENERAL PUNCTUATION
data	 	IDENTIFIER
;	 	GENERAL PUNCTUATION
i	 	IDENTIFIER
,	 	GENERAL PUNCTUATION
index	 	IDENTIFIER
,	 	GENERAL PUNCTUATION
item	 	IDENTIFIER
:	 	GENERAL PUNCTUATION
integer	 	IDENTIFIER
;	 	GENERAL PUNCTUATION
procedure	 	KEYWORD
binsrch	 	IDENTIFIER
(	 	GENERAL PUNCTUATION
a	 	IDENTIFIER
:	 	GENERAL PUNCTUATION
data	 	IDENTIFIER
;	 	GENERAL PUNCTUATION
i	 	IDENTIFIER
,	 	GENERAL PUNCTUATION
j	 	IDENTIFIER
:	 	GENERAL PUNCTUATION
integer	 	IDENTIFIER
;	 	GENERAL PUNCTUATION
var	 	KEYWORD
index	 	IDENTIFIER
:	 	GENERAL PUNCTUATION
integer	 	IDENTIFIER
)	 	GENERAL PUNCTUATION
;	 	GENERAL PUNCTUATION
var	 	KEYWORD
mid	 	IDENTIFIER
:	 	GENERAL PUNCTUATION
	integer	 	IDENTIFIER
;	 	GENERAL PUNCTUATION
begin	 	KEYWORD
if	 	KEYWORD
j	 	IDENTIFIER
<	 	GENERAL PUNCTUATION
i	 	IDENTIFIER
then	 	KEYWORD
index	 	IDENTIFIER
:=	 	COMPOUND OPERATOR
-	 	GENERAL PUNCTUATION
1		 	CONSTANT
else	 	KEYWORD
begin	 	KEYWORD
       mid	 	IDENTIFIER
:=	 	COMPOUND OPERATOR
(	 	GENERAL PUNCTUATION
i	 	IDENTIFIER
+	 	GENERAL PUNCTUATION
j	 	IDENTIFIER
)	 	GENERAL PUNCTUATION
div	 	KEYWORD
2	 	CONSTANT
;	 	GENERAL PUNCTUATION
      if	 	IDENTIFIER
a	 	IDENTIFIER
[	 	GENERAL PUNCTUATION
mid	 	IDENTIFIER
]	 	GENERAL PUNCTUATION
=	 	GENERAL PUNCTUATION
item	 	IDENTIFIER
then	 	KEYWORD
index	 	IDENTIFIER
:=	 	COMPOUND OPERATOR
mid	 	IDENTIFIER
	else	 	IDENTIFIER
if	 	KEYWORD
a	 	IDENTIFIER
[	 	GENERAL PUNCTUATION
mid	 	IDENTIFIER
]	 	GENERAL PUNCTUATION
<	 	GENERAL PUNCTUATION
item	 	IDENTIFIER
then	 	KEYWORD
binsrch	 	IDENTIFIER
(	 	GENERAL PUNCTUATION
a	 	IDENTIFIER
,	 	GENERAL PUNCTUATION
mid	 	IDENTIFIER
+	 	GENERAL PUNCTUATION
1	 	CONSTANT
,	 	GENERAL PUNCTUATION
j	 	IDENTIFIER
,	 	GENERAL PUNCTUATION
item	 	IDENTIFIER
,	 	GENERAL PUNCTUATION
index	 	IDENTIFIER
)	 	GENERAL PUNCTUATION
       else	 	IDENTIFIER
binsrch	 	IDENTIFIER
(	 	GENERAL PUNCTUATION
a	 	IDENTIFIER
,	 	GENERAL PUNCTUATION
i	 	IDENTIFIER
,	 	GENERAL PUNCTUATION
mid	 	IDENTIFIER
-	 	GENERAL PUNCTUATION
1	 	CONSTANT
,	 	GENERAL PUNCTUATION
item	 	IDENTIFIER
,	 	GENERAL PUNCTUATION
index	 	IDENTIFIER
)	 	GENERAL PUNCTUATION
     end	 	IDENTIFIER
;	 	GENERAL PUNCTUATION
end	 	KEYWORD
;	 	GENERAL PUNCTUATION
 begin	 	IDENTIFIER
for	 	KEYWORD
i	 	IDENTIFIER
:=	 	COMPOUND OPERATOR
1	 	CONSTANT
to	 	KEYWORD
100	 	CONSTANT
do	 	KEYWORD
a	 	IDENTIFIER
[	 	GENERAL PUNCTUATION
i	 	IDENTIFIER
]	 	GENERAL PUNCTUATION
:=	 	COMPOUND OPERATOR
2	 	CONSTANT
*	 	GENERAL PUNCTUATION
i	 	IDENTIFIER
+	 	GENERAL PUNCTUATION
(	 	GENERAL PUNCTUATION
i	 	IDENTIFIER
mod	 	KEYWORD
2	 	CONSTANT
)	 	GENERAL PUNCTUATION
;	 	GENERAL PUNCTUATION
for	 	KEYWORD
i	 	IDENTIFIER
:=	 	COMPOUND OPERATOR
1	 	CONSTANT
to	 	KEYWORD
5	 	CONSTANT
do	 	KEYWORD
	begin	 	IDENTIFIER
	  read	 	IDENTIFIER
(	 	GENERAL PUNCTUATION
item	 	IDENTIFIER
)	 	GENERAL PUNCTUATION
;	 	GENERAL PUNCTUATION
	  binsrch	 	IDENTIFIER
(	 	GENERAL PUNCTUATION
a	 	IDENTIFIER
,	 	GENERAL PUNCTUATION
1	 	CONSTANT
,	 	GENERAL PUNCTUATION
2	 	CONSTANT
*	 	GENERAL PUNCTUATION
i	 	IDENTIFIER
,	 	GENERAL PUNCTUATION
item	 	IDENTIFIER
,	 	GENERAL PUNCTUATION
index	 	IDENTIFIER
)	 	GENERAL PUNCTUATION
;	 	GENERAL PUNCTUATION
	  writeln	 	IDENTIFIER
(	 	GENERAL PUNCTUATION
item	 	IDENTIFIER
,	 	GENERAL PUNCTUATION
index	 	IDENTIFIER
)	 	GENERAL PUNCTUATION
	end	 	IDENTIFIER
end	 	KEYWORD
.	 	GENERAL PUNCTUATION
